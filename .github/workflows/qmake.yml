name: QMake

on: [push, pull_request]

jobs:
  build_linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install Qt
      uses: jurplel/install-qt-action@v2.14.0

    - name: Create Makefile
      run: qmake

    - name: Build
      run: make

    - name: Run Unit Tests
      working-directory: ${{github.workspace}}/tests
      run: |
        chmod +x OTPLib_TESTS
        ./OTPLib_TESTS -junitxml > tests.xml
        awk 'BEGIN {NUM=0} /xml version="1.0"/ {NUM++; filename="test_"NUM".xml"} {print > filename}' tests.xml

    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always()
      with:
        check_name: tests_linux
        files:  "${{github.workspace}}/**/test_*.xml"

  build_windows:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install Qt
      uses: jurplel/install-qt-action@v2.14.0

    - name: MSVC Environment Setup
      uses: ilammy/msvc-dev-cmd@v1

    - name: Create Makefile
      run: qmake

    - name: Build
      run: nmake

    - name: Run Unit Tests
      shell: bash
      working-directory: ${{github.workspace}}/tests/release
      run: |
        ./OTPLib_TESTS.exe -junitxml > tests.xml
        awk 'BEGIN {NUM=0} /xml version="1.0"/ {NUM++; filename="test_"NUM".xml"} {print > filename}' tests.xml

    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action/composite@v1
      if: always()
      with:
        check_name: tests_windows
        files: "${{github.workspace}}/**/test_*.xml"

  build_macos:
    runs-on: macos-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install Qt
      uses: jurplel/install-qt-action@v2.14.0
      with:
        setup-python: 'false'

    - name: Create Makefile
      run: qmake

    - name: Build
      run: make

    - name: Run Unit Tests
      working-directory: ${{github.workspace}}/tests
      run: |
        chmod +x OTPLib_TESTS
        ./OTPLib_TESTS -junitxml > tests.xml
        awk 'BEGIN {NUM=0} /xml version="1.0"/ {NUM++; filename="test_"NUM".xml"} {print > filename}' tests.xml

    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action/composite@v1
      if: always()
      with:
        check_name: tests_macos
        files:  "${{github.workspace}}/**/test_*.xml"
